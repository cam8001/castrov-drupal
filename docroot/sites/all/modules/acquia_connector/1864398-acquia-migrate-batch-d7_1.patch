diff --git a/acquia_agent/acquia_agent.migrate.inc b/acquia_agent/acquia_agent.migrate.inc
index 853b14b..584e7cc 100644
--- a/acquia_agent/acquia_agent.migrate.inc
+++ b/acquia_agent/acquia_agent.migrate.inc
@@ -46,17 +46,52 @@ function _acquia_migrate_check_env() {
  * Setup archive directory and internal migrate data struct.
  *
  * @param array $environment
- *   Environment to migrate to, from NSPI acquia_agent_cloud_migration_environments()
+ *   Environment data from NSPI acquia_agent_cloud_migration_environments()
+ *
+ * @return Array of migration data
+ *   'error' : (boolean) Records error for this migration attempt
+ *   'id' : (string) Unique string for this migration attempt
+ *   'date' : UNIX timestamp
+ *   'time' : time in Ymd_his format
+ *   'compression_ext' : (string) Compression extension (zip, gz, or bz2)
+ *   'request_params' : Array of parameters for Acquia Cloud
+ *   'env' : Array, the $environment array
+ *   'no_data_tables' : Array of table names to exclude
+ *   'memory_limit' : PHP memory limit
+ *   'time_limit' : PHP execution limit
+ *   'dir' : (string) Local directory to store migration temp files
+ *   'file' : (string) Base filename to use for migration data.
  */
 function acquia_migrate_prepare($environment) {
-  cache_clear_all();
-
   // Internal migration store is an array because objects cannot be stored
   // by Drupal's Batch API.
-  $local_env = _acquia_migrate_check_env();
+  $local_env = _acquia_migrate_process_setup();
   if ($local_env['error'] !== FALSE) {
     return $local_env;
   }
+  // Record the memory limit in bytes
+  $memory_limit = trim(ini_get('memory_limit'));
+  if ($memory_limit == '-1') {
+    $memory_limit = PHP_INT_MAX;
+  }
+  else {
+    if (!is_numeric($memory_limit)) {
+      $last = drupal_strtolower($memory_limit[strlen($memory_limit) - 1]);
+      switch ($last) {
+        case 'g':
+          $memory_limit *= 1024;
+        case 'm':
+          $memory_limit *= 1024;
+        case 'k':
+          $memory_limit *= 1024;
+          break;
+        default:
+          break;
+      }
+    }
+  }
+  // Record the time limit
+  $time_limit = ini_get('max_execution_time');
   // Modify environment URL if SSL is available for use.
   if (in_array('ssl', stream_get_transports(), TRUE) && !defined('ACQUIA_DEVELOPMENT_NOSSL')) {
     $uri = parse_url($environment['url']);
@@ -84,6 +119,8 @@ function acquia_migrate_prepare($environment) {
     ),
     'env' => $environment,
     'no_data_tables' => array(),
+    'memory_limit' => $memory_limit,
+    'time_limit' => $time_limit,
   );
 
   // Set up local storage of archive.
@@ -136,13 +173,13 @@ function _acquia_migrate_test_migration_setup(&$migration) {
   );
   $response = drupal_http_request($url, array('headers' => $headers, 'max_redirects' => 0));
   if ($response->code != 200) {
-    $migration['error'] = t('Unable to connect to migration destination site, please contact Acquia Support.');
+    $migration['error'] = t('Unable to connect to migration destination site, please check the <a href="!url">troubleshooting documentation</a>.', array('!url' => 'https://docs.acquia.com/cloud/site/import/connector/migrate'));
     return FALSE;
   }
   // A 200 response with body 'invalid request' is returned from the AH_UPLOAD
   // script if receiving a GET request.
   if (strpos($url, 'AH_UPLOAD') !== FALSE && trim($response->data) != 'invalid request') {
-    $migration['error'] = t('Unable to connect to migration destination site, please contact Acquia Support.');
+    $migration['error'] = t('Unable to connect to migration destination site, please check the <a href="!url">troubleshooting documentation</a>.', array('!url' => 'https://docs.acquia.com/cloud/site/import/connector/migrate'));
     return FALSE;
   }
   return TRUE;
@@ -182,6 +219,7 @@ function _acquia_migrate_complete(&$migration) {
 }
 
 function acquia_migrate_batch_test($migration, &$context) {
+  cache_clear_all();
   _acquia_migrate_process_setup();
   // Latest migration might be in $context.
   if (!empty($context['results']['migration'])) {
@@ -201,7 +239,33 @@ function acquia_migrate_batch_test($migration, &$context) {
   $context['message'] = t('Testing migration capabilities');
 }
 
-function acquia_migrate_batch_db($migration, &$context) {
+function _acquia_migrate_table_groups($tables, &$migration) {
+  // Group tables into operations approaching memory limit.
+  $groups = array();
+  $current_op = $size = 0;
+  foreach (array_keys($tables) as $index => $name) {
+    $table_size = $tables[$name]['data_length'] + $tables[$name]['index_length'];
+    if ($table_size >= $migration['memory_limit']) {
+      // Table is larger than limit so put this one in its own operation.
+      $size = 0;
+      $current_op++;
+      $groups[$current_op][] = $name;
+      $current_op++;
+    }
+    elseif (($table_size + $size < $migration['memory_limit']) && ($index / count($tables) < ($current_op + 1) / 3)) { // Assume at least 3 groups.
+      $groups[$current_op][] = $name;
+    }
+    else {
+      $size = 0;
+      $current_op++;
+      $groups[$current_op][] = $name;
+    }
+    $size += $table_size;
+  }
+  return $groups;
+}
+
+function acquia_migrate_batch_db_start($migration, &$context) {
   _acquia_migrate_process_setup();
   // Latest migration might be in $context.
   if (!empty($context['results']['migration'])) {
@@ -214,11 +278,51 @@ function acquia_migrate_batch_db($migration, &$context) {
     return;
   }
 
-  _acquia_migrate_backup_db_to_file_mysql($migration);
+  _acquia_migrate_setup_file_for_db($migration);
 
   // Store migration in results so it can be used by next operation.
   $context['results']['migration'] = $migration;
-  $context['message'] = t('Exported database. Archiving files.');
+  $context['message'] = t('Beginning database export');
+}
+
+function acquia_migrate_batch_db($migration, $tables, $group, &$context) {
+  _acquia_migrate_process_setup();
+  // Latest migration might be in $context.
+  if (!empty($context['results']['migration'])) {
+    $migration = $context['results']['migration'];
+    variable_set('acquia_agent_cloud_migration', $migration);
+  }
+  // Check for error and hault.
+  if (empty($migration) || $migration['error'] !== FALSE) {
+    $context['message'] = t('Encountered error, haulting');
+    return;
+  }
+
+  _acquia_migrate_write_tables_to_file($migration, $tables, $group);
+
+  // Store migration in results so it can be used by next operation.
+  $context['results']['migration'] = $migration;
+  $context['message'] = t('Exporting tables');
+}
+
+function acquia_migrate_batch_db_end($migration, &$context) {
+  _acquia_migrate_process_setup();
+  // Latest migration might be in $context.
+  if (!empty($context['results']['migration'])) {
+    $migration = $context['results']['migration'];
+    variable_set('acquia_agent_cloud_migration', $migration);
+  }
+  // Check for error and hault.
+  if (empty($migration) || $migration['error'] !== FALSE) {
+    $context['message'] = t('Encountered error, haulting');
+    return;
+  }
+
+  _acquia_migrate_close_file_for_db($migration);
+
+  // Store migration in results so it can be used by next operation.
+  $context['results']['migration'] = $migration;
+  $context['message'] = t('Database exported. Archiving files');
 }
 
 function acquia_migrate_batch_tar($migration, &$context) {
@@ -539,8 +643,8 @@ function _acquia_migrate_transmit(&$migration, $content) {
     }
   }
   else {
-    $migration['error'] = t('Transfer error');
-    $migration['error_data'] = $return->data;
+    $migration['error'] = t('Transfer error, please try again.');
+    $migration['error_data'] = !empty($return->data) ? $return->data : NULL;
     return FALSE;
   }
 }
@@ -627,11 +731,7 @@ function _acquia_migrate_cleanup(&$migration) {
 /**
  * Dump mysql database, modified from Backup & Migrate module by ronan.
  */
-
-/**
- * Dump the database to the specified file.
- */
-function _acquia_migrate_backup_db_to_file_mysql(&$migration) {
+function _acquia_migrate_setup_file_for_db(&$migration) {
   // Check migration file at first to avoid dumping db to a hidden file.
   if (!isset($migration['file'])) {
     $migration['error'] = TRUE;
@@ -639,23 +739,25 @@ function _acquia_migrate_backup_db_to_file_mysql(&$migration) {
   }
   $file = $migration['file'] . '.sql';
   $handle = fopen($file, 'w');
-  $lines = 0;
-  $exclude = array();
-  $nodata = $migration['no_data_tables'];
   if ($handle) {
     $data = _acquia_migrate_get_sql_file_header_mysql();
     fwrite($handle, $data);
-    $alltables = _acquia_migrate_get_tables_mysql();
-    foreach ($alltables as $table) {
-      if ($table['name'] && !isset($exclude[$table['name']])) {
-        $data = _acquia_migrate_get_table_structure_sql_mysql($table);
-        fwrite($handle, $data);
-        $lines++;
-        if (!in_array($table['name'], $nodata)) {
-          $lines += _acquia_migrate_dump_table_data_sql_to_file($handle, $table);
-        }
-      }
-    }
+    fclose($handle);
+  }
+  else {
+    $migration['error'] = TRUE;
+  }
+}
+
+function _acquia_migrate_close_file_for_db(&$migration) {
+  // Check migration file at first to avoid dumping db to a hidden file.
+  if (!isset($migration['file'])) {
+    $migration['error'] = TRUE;
+    return;
+  }
+  $file = $migration['file'] . '.sql';
+  $handle = fopen($file, 'a+');
+  if ($handle) {
     $data = _acquia_migrate_get_sql_file_footer_mysql();
     fwrite($handle, $data);
     $stat = fstat($handle);
@@ -669,6 +771,35 @@ function _acquia_migrate_backup_db_to_file_mysql(&$migration) {
   }
 }
 
+function _acquia_migrate_write_tables_to_file(&$migration, $alltables, $tables) {
+  // Check migration file at first to avoid dumping db to a hidden file.
+  if (!isset($migration['file'])) {
+    $migration['error'] = TRUE;
+    return;
+  }
+  $file = $migration['file'] . '.sql';
+  $handle = fopen($file, 'a');
+  $lines = 0;
+  $exclude = array();
+  $nodata = $migration['no_data_tables'];
+  if ($handle) {
+    foreach ($tables as $table) {
+      if ($alltables[$table] && !isset($exclude[$table])) {
+        $data = _acquia_migrate_get_table_structure_sql_mysql($alltables[$table]);
+        fwrite($handle, $data);
+        $lines++;
+        if (!in_array($table, $nodata)) {
+          $lines += _acquia_migrate_dump_table_data_sql_to_file($handle, $alltables[$table]);
+        }
+      }
+    }
+    fclose($handle);
+  }
+  else {
+    $migration['error'] = TRUE;
+  }
+}
+
 /**
  * Get the sql for the structure of the given table.
  */
diff --git a/acquia_agent/acquia_agent.pages.inc b/acquia_agent/acquia_agent.pages.inc
index 814aff0..accb88a 100644
--- a/acquia_agent/acquia_agent.pages.inc
+++ b/acquia_agent/acquia_agent.pages.inc
@@ -626,26 +626,36 @@ function acquia_agent_migrate_form_submit($form, &$form_state) {
     $migration['no_data_tables'] = array('cache', 'cache_menu', 'cache_page', 'cache_field', 'sessions', 'watchdog');
   }
 
+  $form_state['redirect'] = array('admin/config/system/acquia-agent');
   if (isset($migration['error']) && $migration['error'] !== FALSE) {
     drupal_set_message(t('Unable to begin migration. @error', array('@error' => $migration['error'])), 'error');
-    $form_state['redirect'] = array('admin/config/system/acquia-agent');
+    return;
   }
-  else {
-    $batch = array(
-      'title' => t('Acquia Cloud Migrate'),
-      'operations' => array(
-        array('acquia_migrate_batch_test', array($migration)),
-        array('acquia_migrate_batch_db', array($migration)),
-        array('acquia_migrate_batch_tar', array($migration)),
-        array('acquia_migrate_batch_transmit', array($migration)),
-      ),
-      'init_message' => t('Preparing for migration'),
-      'progress_message' => t('Completed @current of @total steps.'),
-      'finished' => 'acquia_migrate_batch_finished',
-      'file' => drupal_get_path('module', 'acquia_agent') . '/acquia_agent.migrate.inc',
-    );
-    batch_set($batch);
+
+  $tables = _acquia_migrate_get_tables_mysql();
+  $table_groups = _acquia_migrate_table_groups($tables, $migration);
+  if ($migration['error'] !== FALSE) {
+    drupal_set_message(t('Unable to begin migration. @error', array('@error' => $migration['error'])), 'error');
+    return;
   }
+  $operations = array(array('acquia_migrate_batch_test', array($migration)));
+  $operations[] = array('acquia_migrate_batch_db_start', array($migration));
+  foreach ($table_groups as $id => $group) {
+    $operations[] = array('acquia_migrate_batch_db', array($migration, $tables, $group));
+  }
+  $operations[] = array('acquia_migrate_batch_db_end', array($migration));
+  $operations[] = array('acquia_migrate_batch_tar', array($migration));
+  $operations[] = array('acquia_migrate_batch_transmit', array($migration));
+
+  $batch = array(
+    'title' => t('Acquia Cloud Migrate'),
+    'operations' => $operations,
+    'init_message' => t('Preparing for migration. This process may take several minutes, please do not navigate away from this page.'),
+    'progress_message' => t('Completed @current of @total steps.'),
+    'finished' => 'acquia_migrate_batch_finished',
+    'file' => drupal_get_path('module', 'acquia_agent') . '/acquia_agent.migrate.inc',
+  );
+  batch_set($batch);
 }
 
 function acquia_agent_migrate_cleanup_submit($form, &$form_state) {
diff --git a/acquia_agent/tests/acquia_agent.test b/acquia_agent/tests/acquia_agent.test
index 8900670..649277e 100644
--- a/acquia_agent/tests/acquia_agent.test
+++ b/acquia_agent/tests/acquia_agent.test
@@ -74,18 +74,12 @@ class AcquiaAgentTestCase extends DrupalWebTestCase {
         return 'Network key';
       case 'subscription-not-found':
         return 'Error: Subscription not found (1800)';
+      case 'migrate':
+        return 'Transfer a fully-functional copy of your site to Acquia Cloud.';
       case 'saved':
         return 'The Acquia configuration options have been saved.';
       case 'subscription':
         return 'Subscription: ' . ACQTEST_ID; // Assumes subscription name is same as id.
-      case 'migrate':
-        return 'Transfer a fully-functional copy of your site to Acquia Cloud.';
-      case 'migrate-hosting-404':
-        return 'Error: Hosting not available under your subscription. Upgrade your subscription to continue with import.';
-      case 'migrate-select-environments':
-        return 'Select environment for migration';
-      case 'migrate-files-label':
-        return 'Migrate files directory';
     }
   }
 
@@ -153,8 +147,69 @@ class AcquiaAgentTestCase extends DrupalWebTestCase {
     $this->drupalPost($this->settings_path, $edit_fields, $submit_button);
     $this->assertFieldChecked('edit-acquia-dynamic-banner', '"Receive updates from Acquia Network" option stays saved');
   }
+}
+
+class AcquiaMigrateTestCase extends DrupalWebTestCase {
+  protected $privileged_user;
+  protected $setup_path;
+  protected $credentials_path;
+  protected $settings_path;
+  protected $help_path;
+  protected $cloud_services_url;
+  protected $trial_url;
+  protected $acquia_test_id;
+  protected $acquia_test_key;
+
+  public static function getInfo() {
+    // Note: getInfo() strings are not translated with t().
+    return array(
+      'name' => 'Acquia Agent Migrate tests',
+      'description' => 'Test Acquia Agent migration functionality.',
+      'group' => 'Acquia',
+    );
+  }
 
-  public function testAcquiaAgentCloudMigrate() {
+  public function setUp() {
+    global $base_url;
+    // Enable any modules required for the test
+    parent::setUp('acquia_agent', 'acquia_connector_test');
+    // Create and log in our privileged user.
+    $this->privileged_user = $this->drupalCreateUser(array(
+      'administer site configuration',
+      'access administration pages',
+    ));
+    $this->drupalLogin($this->privileged_user);
+    // Create a user that has a Network subscription.
+    $this->network_user = $this->drupalCreateUser();
+    user_save($this->network_user, array('mail' => ACQTEST_EMAIL, 'pass' => ACQTEST_PASS));
+    // Setup variables.
+    $this->setup_path = 'admin/config/system/acquia-agent/setup';
+    $this->credentials_path = 'admin/config/system/acquia-agent/credentials';
+    $this->settings_path = 'admin/config/system/acquia-agent';
+    $this->migrate_path = 'admin/config/system/acquia-agent/migrate';
+    variable_set('acquia_network_address', $base_url);
+    variable_set('acquia_spi_server', $base_url);
+    variable_set('acquia_spi_ssl_override', TRUE);
+    variable_set('acquia_agent_verify_peer', FALSE);
+  }
+
+  /**
+   * Helper function for storing UI strings.
+   */
+  private function acquiaAgentStrings($id) {
+    switch ($id) {
+      case 'migrate':
+        return 'Transfer a fully-functional copy of your site to Acquia Cloud.';
+      case 'migrate-hosting-404':
+        return 'Error: Hosting not available under your subscription. Upgrade your subscription to continue with import.';
+      case 'migrate-select-environments':
+        return 'Select environment for migration';
+      case 'migrate-files-label':
+        return 'Migrate files directory';
+    }
+  }
+
+  public function testAcquiaCloudMigrate() {
     // Connect site on pair that will trigger an error for migration.
     $edit_fields = array(
       'acquia_identifier' => ACQTEST_ERROR_ID,
@@ -186,6 +241,66 @@ class AcquiaAgentTestCase extends DrupalWebTestCase {
     $this->drupalGet($this->migrate_path);
     $this->assertNoFieldChecked('edit-migrate-files', "The migrate files checkbox is not checked.");
   }
+
+  public function testAcquiaMigrateFunctions() {
+    module_load_include('inc', 'acquia_agent', 'acquia_agent.migrate');
+    $environments = _acquia_connector_test_get_environments();
+    $migration = acquia_migrate_prepare($environments['dev']);
+    $migration['site_name'] = 'dev';
+    $migrate_default_keys = array(
+      'error',
+      'id',
+      'date',
+      'time',
+      'compression_ext',
+      'env',
+      'request_params',
+      'no_data_tables',
+      'memory_limit',
+      'time_limit',
+      'dir',
+      'file',
+    );
+    $valid = TRUE;
+    foreach ($migrate_default_keys as $key) {
+      if (!array_key_exists($key, $migration)) {
+        $valid = FALSE;
+        break;
+      }
+    }
+    $this->assertTrue($valid, 'Migration data array has expected keys');
+    $tables = _acquia_migrate_get_tables_mysql();
+    $this->assertTrue(array_key_exists('system', $tables), 'Able to get list of tables');
+    $table_groups = _acquia_migrate_table_groups($tables, $migration);
+    $this->assertTrue(count($table_groups) > 1, 'Able to group tables');
+    // Test database export specifics by mimicing batch processes.
+    _acquia_migrate_setup_file_for_db($migration);
+    $sql_file = $migration['file'] . '.sql';
+    $this->assertTrue(file_exists($sql_file), 'Database export file exists');
+    $written_data = file_get_contents($sql_file);
+    $db_header = _acquia_migrate_get_sql_file_header_mysql();
+    $written = $written_data == $db_header ? TRUE : FALSE;
+    $this->assertTrue($written, 'MySQL header written to export file');
+    if (!$written) {
+      return; // Do not continue if file contains incorrect data.
+    }
+    $db_file_handle = fopen($sql_file, 'r');
+    $file_size = fstat($db_file_handle);
+    foreach ($table_groups as $id => $group) {
+      _acquia_migrate_write_tables_to_file($migration, $tables, $group);
+    }
+    $new_file_size = fstat($db_file_handle);
+    $this->assertTrue($new_file_size['size'] > $file_size['size'], 'File size increased after writing tables');
+    _acquia_migrate_close_file_for_db($migration);
+    $db_footer = _acquia_migrate_get_sql_file_footer_mysql();
+    $this->assertTrue($migration['db_size'] > $new_file_size['size'], 'File size increased after writing footer');
+    fclose($db_file_handle);
+    $written_data = file_get_contents($sql_file);
+    $written = strpos($written_data, "CREATE TABLE") !== FALSE ? TRUE : FALSE;
+    $this->assertTrue($written, 'Create table statements appear in export file');
+    $written = strpos($written_data, "INSERT INTO") !== FALSE ? TRUE : FALSE;
+    $this->assertTrue($written, 'Insert statements appear in export file');
+  }
 }
 
 class AquiaAgentUnitTestCase extends DrupalUnitTestCase {
diff --git a/acquia_agent/tests/acquia_connector_test.module b/acquia_agent/tests/acquia_connector_test.module
index 3181b45..e287863 100644
--- a/acquia_agent/tests/acquia_connector_test.module
+++ b/acquia_agent/tests/acquia_connector_test.module
@@ -233,6 +233,20 @@ function acquia_connector_test_subscription_name($data) {
   }
 }
 
+function _acquia_connector_test_get_environments() {
+  $environments = array();
+  foreach (array('dev' => 'Development', 'test' => 'Stage', 'prod' => 'Production') as $key => $name) {
+    $environments[$key] = array(
+      'url' => url('system/acquia-connector-test-upload/AH_UPLOAD', array('absolute' => TRUE)),
+      'stage' => $key,
+      'nonce' => 'nonce',
+      'secret' => 'secret',
+      'site_name' => $name,
+    );
+  }
+  return $environments;
+}
+
 function acquia_connector_test_cloud_migration_environments($data) {
   $fields = array(
     'time' => 'is_numeric',
@@ -256,15 +270,7 @@ function acquia_connector_test_cloud_migration_environments($data) {
   }
   $result = array();
   $result['is_error'] = FALSE;
-  foreach (array('dev' => 'Development', 'test' => 'Stage', 'prod' => 'Production') as $key => $name) {
-    $result['body']['environments'][$key] = array(
-      'url' => url('system/acquia-connector-test-upload/AH_UPLOAD', array('absolute' => TRUE)),
-      'stage' => $key,
-      'nonce' => 'nonce',
-      'secret' => 'secret',
-      'site_name' => $name,
-    );
-  }
+  $result['body']['environments'] = _acquia_connector_test_get_environments();
   return $result;
 }
 
